// <auto-generated />
using System;
using System.Diagnostics.CodeAnalysis;
using InfoTrack.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InfoTrack.Persistence.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250412224009_InitialCreate")]
    [ExcludeFromCodeCoverage]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("InfoTrack.Domain.Models.SearchResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Keywords")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("SearchDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("SearchEngine")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SearchTarget")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SearchResults");
                });

            modelBuilder.Entity("InfoTrack.Domain.Models.SearchResultPosition", b =>
                {
                    b.Property<int>("SearchResultId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Position")
                        .HasColumnType("INTEGER");

                    b.HasKey("SearchResultId", "Position");

                    b.ToTable("SearchResultPositions");
                });

            modelBuilder.Entity("InfoTrack.Domain.Models.SearchResultPosition", b =>
                {
                    b.HasOne("InfoTrack.Domain.Models.SearchResult", null)
                        .WithMany("Positions")
                        .HasForeignKey("SearchResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InfoTrack.Domain.Models.SearchResult", b =>
                {
                    b.Navigation("Positions");
                });
#pragma warning restore 612, 618
        }
    }
}
